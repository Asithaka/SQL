Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table =10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	
--------------------------------------------------------------------------------------------------

select count(*) from attribute 
select count(*) from business   
select count(*) from category    
select count(*) from checkin   
select count(*) from friend     
select count(*) from elite_years  
select count(*) from  hours
select count(*) from  photo
select count(*) from  review  
select count(*) from  tip   
select count(*) from   user  

----------------------------------------------------------------------------------------------------

2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review =  10000 
vi. Checkin = 493 
vii. Photo = 10000 
viii. Tip = 537
ix. User =  10000
x. Friend = 11
xi. Elite_years =2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.

-------------------------------------------------------------------------------------------------------
select count(distinct business_id)from attribute 
select count(distinct  id ) from business 
select count(distinct business_id)from category
select count(distinct business_id)from hours
select count(distinct business_id)from checkin 
select count(distinct id)from user 
select count(distinct id)from review 
select count(distinct id)from photo
select count(distinct user_id)  from friend     
select count(distinct user_id)  from elite_years    
select count(distinct user_id)  from tip 

------------------------------------------------------------------------------------------------------	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no
	
	
	SQL code used to arrive at answer:
----------------------------------------------------------------------------------------------------------
select 
    sum(case when  id is null then 0 else 1 end) as Column_1,
    sum(case when name  is null then 0 else 1 end) as Column_2,
    sum(case when review_count is null then 0 else 1 end) as Column_3,
    sum(case when yelping_since is null then 0 else 1 end) as Column_4,
    sum(case when useful is null then 0 else 1 end) as Column_5,
    sum(case when funny is null then 0 else 1 end) as Column_6,
    sum(case when  cool is null then 0 else 1 end) as Column_7,
    sum(case when fans is null then 0 else 1 end) as Column_8,
    sum(case when average_stars is null then 0 else 1 end) as Column_9,
    sum(case when compliment_hot is null then 0 else 1 end) as Column_10,
    sum(case when compliment_more is null then 0 else 1 end) as Column_11,
    sum(case when compliment_profile is null then 0 else 1 end) as Column_12,
    sum(case when compliment_cute  is null then 0 else 1 end) as Column_13,
    sum(case when compliment_list  is null then 0 else 1 end) as Column_14,
    sum(case when compliment_plain  is null then 0 else 1 end) as Column_15,
    sum(case when compliment_cool is null then 0 else 1 end) as Column_16,
    sum(case when compliment_funny is null then 0 else 1 end) as Column_17,
    sum(case when compliment_writer is null then 0 else 1 end) as Column_18,
    sum(case when compliment_photos is null then 0 else 1 end) as Column_19
    
from user
	
----------------------------------------------------------------------------------------------------
	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:		max:		avg:
		
+---------+---------+---------+
| average | minimum | maximum |
+---------+---------+---------+
|  3.7082 |       1 |       5 |
+---------+---------+---------+

-----------------------------------------------------------------------------------------------------
select 
   avg(stars) as average,
   min(stars) as minimum,
   max(stars) as maximum
from review
-----------------------------------------------------------------------------------------------------
	
	ii. Table: Business, Column: Stars
	
		min:		max:		avg:


+---------+---------+---------+
| average | minimum | maximum |
+---------+---------+---------+
|  3.6549 |     1.0 |     5.0 |
+---------+---------+---------+

-----------------------------------------------------------------------------------------------------

select 
   avg(stars) as average,
   min(stars) as minimum,
   max(stars) as maximum
from business

-----------------------------------------------------------------------------------------------------		
	
	iii. Table: Tip, Column: Likes
	
		min:		max:		avg:
+---------+---------+---------+
| average | minimum | maximum |
+---------+---------+---------+
|  0.0144 |       0 |       2 |
+---------+---------+---------+

-----------------------------------------------------------------------------------------------------
select 
   avg(likes) as average,
   min(likes) as minimum,
   max(likes) as maximum
from tip

-----------------------------------------------------------------------------------------------------
		
	
	iv. Table: Checkin, Column: Count
	
		min:		max:		avg:

+---------+---------+---------+
| average | minimum | maximum |
+---------+---------+---------+
|  1.9414 |       1 |      53 |
+---------+---------+---------+
-----------------------------------------------------------------------------------------------------
select 
   avg(count) as average,
   min(count) as minimum,
   max(count) as maximum
from checkin
-----------------------------------------------------------------------------------------------------
		
	
	v. Table: User, Column: Review_count
	
		min:		max:		avg:
+---------+---------+---------+
| average | minimum | maximum |
+---------+---------+---------+
| 24.2995 |       0 |    2000 |
+---------+---------+---------+
-----------------------------------------------------------------------------------------------------
select 
   avg(review_count) as average,
   min(review_count) as minimum,
   max(review_count) as maximum
from user
-----------------------------------------------------------------------------------------------------
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
-------------------------------------------------------------------------------------------------------
select  city,review_count  from business
order by review_count desc

-------------------------------------------------------------------------------------------------------	
	
	Copy and Paste the Result Below:
	
+------------+--------------+
| city       | review_count |
+------------+--------------+
| Las Vegas  |         3873 |
| Montréal   |         1757 |
| Gilbert    |         1549 |
| Las Vegas  |         1410 |
| Las Vegas  |         1389 |
| Las Vegas  |         1252 |
| Las Vegas  |         1116 |
| Las Vegas  |         1084 |
| Las Vegas  |          961 |
| Gilbert    |          902 |
| Las Vegas  |          864 |
| Scottsdale |          823 |
| Las Vegas  |          821 |
| Las Vegas  |          786 |
| Henderson  |          785 |
| Toronto    |          778 |
| Las Vegas  |          768 |
| Las Vegas  |          758 |
| Scottsdale |          726 |
| Cleveland  |          723 |
| Las Vegas  |          720 |
| Charlotte  |          715 |
| Phoenix    |          711 |
| Las Vegas  |          706 |
| Phoenix    |          700 |
+------------+--------------+
	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
-------------------------------------------------------------------------------------------------
select stars ,count(*) 
from business
where city='Avon'
group by stars

-------------------------------------------------------------------------------------------------


Copy and Paste the Resulting Table Below (2 columns  star rating and count):

+-------+----------+
| stars | count(*) |
+-------+----------+
|   1.5 |        1 |
|   2.5 |        2 |
|   3.5 |        3 |
|   4.0 |        2 |
|   4.5 |        1 |
|   5.0 |        1 |
+-------+----------+


ii. Beachwood

SQL code used to arrive at answer:

-----------------------------------------------------------------------------------------------

select stars ,count(*) 
from business
where city='Beachwood'
group by stars

-----------------------------------------------------------------------------------------------



Copy and Paste the Resulting Table Below (2 columns  star rating and count):
		
+-------+----------+
| stars | count(*) |
+-------+----------+
|   2.0 |        1 |
|   2.5 |        1 |
|   3.0 |        2 |
|   3.5 |        2 |
|   4.0 |        1 |
|   4.5 |        2 |
|   5.0 |        5 |
+-------+----------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
-------------------------------------------------------------------------------------------------

select name , review_count 
from user
order by review_count desc
limit 3

--------------------------------------------------------------------------------------------------
		
	Copy and Paste the Result Below:
	
+--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+	


8. Does posing more reviews correlate with more fans?

----------------------------------------------------------------------------------------------------
select name , review_count, fans 
from user
order by review_count desc

----------------------------------------------------------------------------------------------------

	Please explain your findings and interpretation of the results:

posing more reviews does not guarantee that having more fans. Because according to the following table, we can see that 
fans column does not have any  order(ascending or descending)   
 
+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Gerald    |         2000 |  253 |
| Sara      |         1629 |   50 |
| Yuri      |         1339 |   76 |
| .Hon      |         1246 |  101 |
| William   |         1215 |  126 |
| Harald    |         1153 |  311 |
| eric      |         1116 |   16 |
| Roanna    |         1039 |  104 |
| Mimi      |          968 |  497 |
| Christine |          930 |  173 |
| Ed        |          904 |   38 |
| Nicole    |          864 |   43 |
| Fran      |          862 |  124 |
| Mark      |          861 |  115 |
| Christina |          842 |   85 |
| Dominic   |          836 |   37 |
| Lissa     |          834 |  120 |
| Lisa      |          813 |  159 |
| Alison    |          775 |   61 |
| Sui       |          754 |   78 |
| Tim       |          702 |   35 |
| L         |          696 |   10 |
| Angela    |          694 |  101 |
| Crissy    |          676 |   25 |
| Lyn       |          675 |   45 |
+-----------+--------------+------+
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: more revies with the word 'Love'
+------------+------------+
| Love_count | hate_count |
+------------+------------+
|       1780 |        232 |
+------------+------------+

	
	SQL code used to arrive at answer:
--------------------------------------------------------------------------------------------------

select 
sum(case when text like '%Love%' then 1 else 0 end) as Love_count,
sum(case when text like '%hate%' then 1 else 0 end) as hate_count
from review

--------------------------------------------------------------------------------------------------
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
----------------------------------------------------------------------------------------------------

select name,fans
from user
order by fans desc
limit 10

-----------------------------------------------------------------------------------------------------	
	
	Copy and Paste the Result Below:

	
+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+
	
11. Is there a strong relationship (or correlation) between having a high number of fans and being listed 
   as "useful" or "funny?" Out of the top 10 users with the highest number of fans, what percent are also listed as useful or funny?

Key:
0% - 25% - Low relationship
26% - 75% - Medium relationship
76% - 100% - Strong relationship
	
	SQL code used to arrive at answer:
-----------------------------------------------------------------------------------------------------	
select ((sum(useful)+sum(funny))*100/(sum(useful)+sum(funny)+sum(cool))) as new 
from user 
order by fans desc
limit 10
-----------------------------------------------------------------------------------------------------		
	Copy and Paste the Result Below:
+-----+
| new |
+-----+
|  69 |
+-----+
	
	
	Please explain your findings and interpretation of the results:
	
	
I got 69%. There I can there is a strong relationship.



Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category 
by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars 
and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?

yes,

+-------+-----------+-------------+----------------------+
| stars | city      | category    | hours                |
+-------+-----------+-------------+----------------------+
|   3.0 | Las Vegas | Restaurants | Saturday|11:00-0:00  |
|   4.0 | Las Vegas | Restaurants | Saturday|10:00-23:00 |
+-------+-----------+-------------+----------------------+


ii. Do the two groups you chose to analyze have a different number of reviews?

yes,

+-------+-----------+-------------+----------------------+--------------+
| stars | city      | category    | hours                | review_count |
+-------+-----------+-------------+----------------------+--------------+
|   3.0 | Las Vegas | Restaurants | Saturday|11:00-0:00  |          123 |
|   4.0 | Las Vegas | Restaurants | Saturday|10:00-23:00 |          768 |
+-------+-----------+-------------+----------------------+--------------+
         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

No.data come from two different locations.


+-------+-----------+-------------+----------------------+--------------+-------------+
| stars | city      | category    | hours                | review_count | postal_code |
+-------+-----------+-------------+----------------------+--------------+-------------+
|   3.0 | Las Vegas | Restaurants | Saturday|11:00-0:00  |          123 | 89103       |
|   4.0 | Las Vegas | Restaurants | Saturday|10:00-23:00 |          768 | 89146       |
+-------+-----------+-------------+----------------------+--------------+-------------+


SQL code used for analysis:

-----------------------------------------------------------------------------------------------------------

select stars ,city,category,hours 
from (business inner join category 
on business.id=  category.business_id) inner join hours on
business.id=hours.business_id
where city='Las Vegas' and category ='Restaurants'
group by business.stars
-----------------------------------------------------------------------------------------------------------

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones
 that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.

+---------------+-------------------+---------+
|    avg(stars) | avg(review_count) | is_open |
+---------------+-------------------+---------+
| 3.52039473684 |     23.1980263158 |       0 |
| 3.67900943396 |     31.7570754717 |       1 |
+---------------+-------------------+---------+
		
i. Difference 1:

The businesses which are still open have more average stars than which are already closed.
         
         
ii. Difference 2:
  

The businesses which are still open have more average review count than which are already closed.     
         
         
SQL code used for analysis:

-----------------------------------------------------------------------------------------------------------------
select avg(stars),avg(review_count),is_open 
from business
group by is_open

-------------------------------------------------------------------------------------------------------------------

	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and 
  are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to 
find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of 
fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up 
with your own problem you want to solve. Provide answers, in-line, to all of the following:

	
i. Indicate the type of analysis you chose to do:
         
predicting the overall star rating for a business
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
     
             
For this analysis, I want name, stars and is_open columns from business and category tables. I calculate the average value
 of stars for each business and check whether that business is open or not. If it is closed we do not need the analysis for rating. 
I picked these data because those are easy to analysis and I believe that rating the business is more popular
today and everyone needs some guide before they go to new business.
             
iii. Output of your finished dataset:
         
+------------------------------------------------+------------+---------+
| name                                           | avg(stars) | is_open |
+------------------------------------------------+------------+---------+
| A Desert Custom Cycles                         |        5.0 |       1 |
| Adobe Montessori                               |        5.0 |       1 |
| Apache Wash Trailhead                          |        5.0 |       1 |
| Back-Health Chiropractic                       |        5.0 |       1 |
| Brandi Gilstrap                                |        5.0 |       1 |
| Buddy's Muffler & Exhaust                      |        5.0 |       1 |
| Camden Fairview                                |        5.0 |       1 |
| Christian Brothers Automotive                  |        5.0 |       1 |
| Clean Colonic                                  |        5.0 |       1 |
| Desert Medical Equipment                       |        5.0 |       1 |
| Frankie Fettuccine Food Truck                  |        5.0 |       1 |
| Green Corner Restaurant                        |        5.0 |       1 |
| Haggard Chiropractic                           |        5.0 |       1 |
| Halo Plumbing                                  |        5.0 |       1 |
| Innercity MMA                                  |        5.0 |       1 |
| Jon Petrick, DC - Las Vegas Pain Relief Center |        5.0 |       1 |
| Lifestyles Fitness Personal Training           |        5.0 |       1 |
| Middleton Art and Framing                      |        5.0 |       1 |
| Motors & More                                  |        5.0 |       1 |
| PC Savants                                     |        5.0 |       1 |
| PRO BIKE+RUN                                   |        5.0 |       1 |
| Race Day Mobile Detailing                      |        5.0 |       1 |
| Red Apron Bakeshop                             |        5.0 |       1 |
| Springmaster Garage Door Service               |        5.0 |       1 |
| Trendsetters                                   |        5.0 |       1 |
+------------------------------------------------+------------+---------+
         
iv. Provide the SQL code you used to create your final dataset:
-----------------------------------------------------------------------------------------------------------------------
select name,avg(stars),is_open
from business inner join category
on business.id= category.business_id
where is_open =1
group by name
order by avg(stars) desc

-------------------------------------------------------------------------------------------------------------------------
